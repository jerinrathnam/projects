Parameters:
  VPCCIDR:
    Type: String
    Default: 192.168.0.0/16
  PublicSubnet1Cidr:
    Type: String
    Default: 192.168.1.0/24
  PublicSubnet2Cidr:
    Type: String
    Default: 192.168.2.0/24
  PublicSubnet3Cidr:
    Type: String
    Default: 192.168.3.0/24
  PrivateSubnet1Cidr:
    Type: String
    Default: 192.168.4.0/24
  PrivateSubnet2Cidr:
    Type: String
    Default: 192.168.5.0/24
  PrivateSubnet3Cidr:
    Type: String
    Default: 192.168.6.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: InternetGateway
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: Name
        Value: public
      VpcId: !Ref VPC
  PublicSubnetRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: Name
        Value: publicSubnet1
      VpcId: !Ref VPC
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: Name
        Value: publicSubnet2
      VpcId: !Ref VPC
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnet3Cidr
      MapPublicIpOnLaunch: true
      Tags: 
      - Key: Name
        Value: publicSubnet3
      VpcId: !Ref VPC
  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties: 
      Domain: vpc
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties: 
      Domain: vpc
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
  NatGateway3EIP:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties: 
      Domain: vpc
  NatGateway3:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway3EIP.AllocationId
      SubnetId: !Ref PublicSubnet3

  PrivateSubnet1RouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: Name
        Value: private1
      VpcId: !Ref VPC
  PrivateSubnet1Route:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateSubnet1RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags: 
      - Key: Name
        Value: privateSubnet1
      VpcId: !Ref VPC
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateSubnet1RouteTable

  PrivateSubnet2RouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: Name
        Value: private2
      VpcId: !Ref VPC
  PrivateSubnet2Route:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateSubnet2RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags: 
      - Key: Name
        Value: privateSubnet2
      VpcId: !Ref VPC
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateSubnet2RouteTable

  PrivateSubnet3RouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: Name
        Value: private3
      VpcId: !Ref VPC
  PrivateSubnet3Route:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateSubnet3RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway3
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnet3Cidr
      AvailabilityZone: !Select [2, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags: 
      - Key: Name
        Value: privateSubnet3
      VpcId: !Ref VPC
  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateSubnet3RouteTable
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Vpc_sg_group
      GroupDescription: Allow http to client host
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: VpcID
  PublicSubnet1:
    Description: Subnet ID 1
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet-1
  PublicSubnet2:
    Description: Subnet ID 2
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet-2
  PublicSubnet3:
    Description: Subnet ID 3
    Value: !Ref PublicSubnet3
    Export:
      Name: PublicSubnet-3
  PrivateSubnet1:
    Description: Subnet ID 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet-1
  PrivateSubnet2:
    Description: Subnet ID 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet-2
  PrivateSubnet3:
    Description: Subnet ID 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: PrivateSubnet-3
  SecurityGroup:
    Description: SecurityGroup ID 3
    Value: !Ref SecurityGroup
    Export:
      Name: SecurityGroup